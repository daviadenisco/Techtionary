1. cd into Quarter 2

2. npm install express-generator -g

3. express --view=ejs myapp

4. atom .

5. npm install

6. npm init

7. git init

8. touch .gitignore && echo './node_modules' > .gitignore

9. git add . && git commit -m 'Create new node project'

10. npm install --save express knex pg ejs body-parser morgan nodemon

11. git add . && git commit -m 'Install express and related packages'

12. touch knexfile.js

13. in knexfile.js:
module.exports = {
  development: {
    client: 'pg',
    connection: 'postgres://localhost:5432/Techtionary'
  }
};

14. touch README.MD

15. created github repo

16. git remote add origin https://github.com/daviadenisco/Techtionary.git

17. git push -u origin master

18. touch db.js

19. echo 'node_modules' > .gitignore

20. git add .  && git commit -m 'Init an npm project'

21. npm install --save knex pg

22. in db.js file:
const dbConfig = require('./knexfile').development;
const knex = require('knex')(dbConfig);

module.exports = knex;

23. git add . && git commit -m 'Add dev db connection and config'

24. createdb Techtionary

25. node_modules/.bin/knex migrate:make 'create_words_table'

26. in migrations file:
module.exports = {
  up(knex, Promise) {
    return knex.schema.createTable('todos', (table) => {
      table.increments();
      table.string('title', 255).notNull();
      table.text('description').defaultTo('');
      table.timestamps(true, true);
    });
  },
  down(knex, Promise) {
    return knex.schema.dropTable('todos');
  }
}

27. node_modules/.bin/knex migrate:latest

28. git add . && git commit -m 'Add words migration'

29. npm install --save express body-parser morgan ejs nodemon

30. git add . && git commit -m 'Add express app packages'

31. setup canonical server.js in server.js file:
const express = require('express');
const morgan = require('morgan');
const bodyParser = require('body-parser');

const app = express();
const PORT = 8000;

app.set('view engine', 'ejs');

32. setup middleware in server.js file:
app.use(morgan('combined'));
app.use(bodyParser.urlencoded({extended: true}));
app.use(bodyParser.json());

app.listen(PORT, () => {
  console.log('Server listening on ', PORT);
})

33. in package.json file, add under scripts:
"start": "nodemon"

34. git add . && git commit -m 'Update server w/ canonical middleware'

35. mkdir routes

36. cd routes

37. touch words.js

38. in routes/words.js file:
const app = require('express').Router();
app.get('/', (req, res) => {
  res.send('ALL WORDS');
});
app.get('/new', (req, res) => {

});
app.get('/:id', (req, res)=> {

});
app.post('/', (req, res) => {

});
app.patch('/:id', (req, res) => {

});
app.delete('/:id', (req, res) => {

});
module.exports = app;
39. in server.js file:
const words = require('./routes/words');
app.use('/words', words);

40. 
